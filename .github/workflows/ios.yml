name: Build Flutter APK's and App bundle

on:
  push:
    branches: [teste]

jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '17'
      
      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"
          
      - run: flutter pub get
      
      - name: Build APK
        run: flutter build apk
      
      - name: Upload APK
        uses: actions/upload-artifact@v3.1.0
        with:
          name: apk
          path: build/app/outputs/flutter-apk/*.apk

  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles   

      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
        
      - run: flutter pub get
      
      - name: Build iOS
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload

      - name: Upload iOS
        uses: actions/upload-artifact@v3.1.0
        with:
          name: ios
          path: build/ios/iphoneos/app.ipa


  create-release:
    name: Create Release
    needs: [build-apk, build-ios]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Download APK
        uses: actions/download-artifact@v3
        with:
          name: apk
          path: build/app/outputs/flutter-apk/
          
      - name: Download iOS
        uses: actions/download-artifact@v3
        with:
          name: ios
          path: build/ios/iphoneos/
          
      - name: Create Release
        uses: ncipollo/release-action@v1.10.0
        with:
          artifacts: "build/app/outputs/flutter-apk/*.apk,build/ios/iphoneos/app.ipa"
          tag: v0.0.${{ github.run_number }}
          overwrite: true
          token: ${{ secrets.AUTODEPLOY_PAT }}
